//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClariusLabs.NuGet.Toolkit
{
	using global::NuPattern.Runtime;
	using global::NuPattern.Runtime.ToolkitInterface;
	using global::System;
	using global::System.Collections.Generic;
	using global::System.ComponentModel;
	using global::System.ComponentModel.Composition;
	using global::System.ComponentModel.Design;
	using global::System.Drawing.Design;
	using Runtime = global::NuPattern.Runtime;

	/// <summary>
	/// Description for NuGetPackage.DefaultView
	/// </summary>
	[Description("Description for NuGetPackage.DefaultView")]
	[ToolkitInterfaceProxy(ExtensionId = "dea21b17-80c8-451d-ae19-0c0f05a01ecc", DefinitionId = "e0e80bd9-d562-48de-8641-a1406409c64f", ProxyType = typeof(DefaultView))]
	[System.CodeDom.Compiler.GeneratedCode("NuPattern Toolkit Library", "1.3.20.0")]
	[System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
	internal partial class DefaultView : IDefaultView
	{

		private Runtime.IView target;
		private IContainerProxy<IDefaultView> proxy;

		/// <summary>
		/// Creates a new instance of the <see cref="DefaultView"/> class.
		/// </summary>
		[ImportingConstructor]
		private DefaultView() { }

		/// <summary>
		/// Creates a new instance of the <see cref="DefaultView"/> class.
		/// </summary>
		public DefaultView(Runtime.IView target)
		{
			this.target = target;
			this.proxy = target.ProxyFor<IDefaultView>();
			OnCreated();
		}

		/// <summary>
		/// When overridden, initializes the class.
		/// </summary>
		partial void OnCreated();

		/// <summary>
		/// Gets the parent element.
		/// </summary>
		public virtual INuGetPackage Parent
		{
			get { return this.target.Parent.As<INuGetPackage>(); }
		}

		/// <summary>
		/// Deletes this element.
		/// </summary>
		public virtual void Delete()
		{
			this.target.Delete();
		}

		/// <summary>
		/// Gets the generalized interface (<see cref="Runtime.IView"/>) of this element.
		/// </summary>
		public virtual Runtime.IView AsView()
		{
			return this.target;
		}

		/// <summary>
		/// Gets the specified generalized interface of this element, if possible.
		/// </summary>
		public virtual TGeneralizedInterface As<TGeneralizedInterface>() where TGeneralizedInterface : class
		{
			return this.target as TGeneralizedInterface;
		}
	}
}
