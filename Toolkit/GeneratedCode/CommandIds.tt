<#@ template Debug="True" inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation" #>
<#@ VSPackageDesigner processor="VSPackageDesignerDirectiveProcessor" requires="fileName='..\Toolkit.vspackage'" #>
<#@ output extension=".cs" #>
#region Apache 2.0 License
/*
    Clide
    Copyright 2010 Clarius Consulting

    Licensed to Xamarin under the Apache License, Version 2.0 
    (the "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
*/
#endregion

namespace <#= this.Root.CommandTable.SafeProjectName #>
{
    static partial class CommandIds
    {
<#
			foreach(var button in this.Root.CommandTable.Buttons)
			{ 
#>
		public const int <#= button.Name #> = 0x<#= IntToHex(button.IdNumeric) #>;
<#			
			} 

			foreach(var combo in this.Root.CommandTable.Combos)
			{ 
#>
		public const int <#= combo.Name #> = 0x<#= IntToHex(combo.IdNumeric) #>;
<#
				if (combo.Type != ComboType.MRUCombo)
				{
#>
		public const int <#= combo.Name #>GetList = 0x<#= IntToHex(combo.IdCommandList) #>;
<#
				}
			}	 

			foreach(var menuBase in this.Root.CommandTable.MenuBases)
			{ 
				Menu menu = menuBase as Menu;
                if (menu != null && (menu.Type == MenuType.ToolWindowToolbar || menu.Type == MenuType.Context))
				{
#>
		public const int <#= menu.Name #> = 0x<#= IntToHex(menu.IdNumeric) #>;
<#	
				}
			}
#>        
    };
}
<#+
    string IntToHex(int id)
    {
		return id.ToString("X").PadLeft(4, '0');
    }
#>